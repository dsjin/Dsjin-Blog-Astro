---
import { getCollection } from "astro:content"
import Layout from "../../layouts/Layout.astro"
import PostList from "../../components/PostList.astro"
import Pager from "../../components/Pager.vue"
import type { CollectionEntry } from "astro:content"
import type { Post } from "../../assets/types/posts"
import { SEO } from "astro-seo";
const { path } = Astro.params
const [tag, page = '1'] = (path as string).split('/')
const { origin, href } = Astro.url

let originalTagName = ''

const totalTargetPosts = (await getCollection('blog', ({ data }: CollectionEntry<'blog'>) => {
		let included = false
		data.tags.forEach((value: string) => {
			if (value.toLowerCase().replace(/ /g, '-') === tag) {
        originalTagName = value
				included = true
			}
		})
		return included
	})).map((value): Post => {
	return {
		...value.data,
		slug: value.slug,
		coverImage: value.data.coverImage?.src,
		author: {
			...value.data.author,
			profileImage: value.data.author.profileImage?.src
		}
	}
})

const totalPages = Math.ceil(totalTargetPosts.length / 5)

export async function getStaticPaths() {
  const blogPosts = await getCollection('blog')
  const allTags = [
    ...new Set(blogPosts.flatMap(post => post.data.tags))
  ]
  const allSlugs: any[] = []
  allTags.forEach((tag: string) => {
    const targetPosts = blogPosts.filter((value) => value.data.tags.includes(tag))
    const numberOfPosts = Math.ceil(targetPosts.length / 5)
    let formatedTag = tag.toLowerCase().replace(/ /g, '-')
    allSlugs.push({
      params: { path: `${formatedTag}` }
    })
    Array.from({ length: numberOfPosts }, (_, index) => index + 1).forEach((page: number) => {
      allSlugs.push({
        params: { path: `${formatedTag}/${page}` }
      })
    })
  })
  return allSlugs
}
 
---

<Layout>
  <SEO
    slot="header"
    title={`${originalTagName} | DSJIN BLOG`}
    description=`My posts in ${originalTagName} tag`,
    openGraph={{
      basic: {
        title: `${originalTagName} | DSJIN BLOG`,
        type: 'website',
        image: `${origin}/default.png`,
        url: href
      }
    }}
		twitter={{
      card: 'summary_large_image',
      site: href,
      creator: 'Thatchakon Jom-ud',
      title: `${originalTagName} | DSJIN BLOG`,
      description: `My posts in ${originalTagName} tag`,
      image: `${origin}/default.png`
    }}
  />
  <div class="container">
    <h1>{originalTagName}</h1>
    <div class="_flex _column">
      <PostList tag={tag} page={page} direction="DESC" />
    </div>
    <Pager
      totalPages={totalPages}
      currentPage={parseInt(page)}
      slug={`/tag/${tag}/`}
    />
  </div>
</Layout>